#!wing
#!version=6.0
##################################################################
# Wing IDE project file : User-specific branch                   #
##################################################################
[user attributes]
debug.err-values = {loc('main.py'): {}}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': '4R5AtH671pVxxyNyXXApgNxpYf'\
        'xeaAYx',
        'size-state': 'maximized',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0,
                                   1],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.19373368146214098,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [],
                                 'selected-nodes': [],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('../../1.py'): {'exp'\
        'anded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../1.py'),
                      'x')]},
        loc('../../C++/Algorithms and data structures/gen.py'): {'expanded-n'\
        'odes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../C++/Algorithms and data structures/gen.py'),
                             'n')]],
        'top-node': [('generic attribute',
                      loc('../../C++/Algorithms and data structures/gen.py'),
                      'fout')]},
        loc('../../Chf/chf.py'): {'expanded-nodes': [],
                                  'selected-nodes': [],
                                  'top-node': [('generic attribute',
        loc('../../Chf/chf.py'),
        'a')]},
        loc('../../Chf/kek.py'): {'expanded-nodes': [],
                                  'selected-nodes': [],
                                  'top-node': [('generic attribute',
        loc('../../Chf/kek.py'),
        'a')]},
        loc('../../Chf/max_perfect.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../Chf/max_perfect.py'),
                      'a')]},
        loc('../../Chf/max_perfect_random.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../Chf/max_perfect_random.py'),
                      'a')]},
        loc('../../Chf/untitled-1.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../Chf/untitled-1.py'),
                      'count')]},
        loc('../../LKSH 2017/Day 4/Day 4/Day 4/1.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../Equalizer(compile)/main.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../Equalizer(compile)/main.py'),
                      'counter')]},
        loc('../Equalizer(compile)_NB/main.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../Equalizer(compile)_NB/main.py'),
                             'clipping')]],
        'top-node': [('generic attribute',
                      loc('../Equalizer(compile)_NB/main.py'),
                      'clipping')]},
        loc('../Equalizer(compile)_NB/postprocessing.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../Equalizer(compile)_NB/preprocessing.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../Equalizer(compile)_NB/preprocessing.py'),
                      'band_window_arr')]},
        loc('../Equalizer(compile)_NB/processing.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../Equalizer(compile)_NB/processing.py'),
                      'equalize_frame')]},
        loc('../Equalizer(compile)_NB/samples/mop.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../Equalizer(compile)_NB/samples/mop.py'),
                      'data')]},
        loc('../Games/Clear/main.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../Games/Clear/main.py'),
                      'Background')]},
        loc('../Games/Clear/server.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../Games/Clear/server.py'),
                      'GameServer')]},
        loc('../Graphs builder/main.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../Graphs builder/main.py'),
                      'a')]},
        loc('../MFCC/Nikitos/fft.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../MFCC/Nikitos/fft.py'),
                             'x')]],
        'top-node': [('generic attribute',
                      loc('../MFCC/Nikitos/fft.py'),
                      'fft_result')]},
        loc('../MFCC/Nikitos/mfcc.py'): {'expanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../MFCC/Nikitos/mfcc.py'),
                             'trfbank')]],
        'top-node': [('generic attribute',
                      loc('../MFCC/Nikitos/mfcc.py'),
                      'ceps')]},
        loc('../MFCC/Nikitos/prepr.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../MFCC/Nikitos/prepr.py'),
                             'ws')]],
        'top-node': [('generic attribute',
                      loc('../MFCC/Nikitos/prepr.py'),
                      'fft_result')]},
        loc('../MFCC/Nikitos/xl.py'): {'expanded-nodes': [],
                                       'selected-nodes': [[('generic attribu'\
        'te',
        loc('../MFCC/Nikitos/xl.py'),
        'ws')]],
                                       'top-node': [('generic attribute',
        loc('../MFCC/Nikitos/xl.py'),
        'i')]},
        loc('../Matan/3/window.py'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': [('generic attribute',
        loc('../Matan/3/window.py'),
        'canv')]},
        loc('../Trash/class.py'): {'expanded-nodes': [],
                                   'selected-nodes': [],
                                   'top-node': [('class def',
        loc('../Trash/class.py'),
        'A')]},
        loc('../Tutorials/PyOpenGL/1.py'): {'expanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../Tutorials/PyOpenGL/1.py'),
                             'draw')]],
        'top-node': [('function def',
                      loc('../Tutorials/PyOpenGL/1.py'),
                      'draw')]},
        loc('../Tutorials/multiprocessing/apply_async_sample.py'): {'expande'\
        'd-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../Tutorials/multiprocessing/mp_serv.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../Tutorials/multiprocessing/pool_custom.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../Tutorials/multiprocessing/pool_custom.py'),
                      'f')]},
        loc('../Tutorials/multiprocessing/pool_sample.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../Tutorials/multiprocessing/pool_sample.py'),
                      'f')]},
        loc('../Tutorials/multiprocessing/process_class.py'): {'expanded-nod'\
        'es': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../Tutorials/multiprocessing/process_class.py'),
                      'f')]},
        loc('../VK/get_messages.py'): {'expanded-nodes': [],
                                       'selected-nodes': [[('function def',
        loc('../VK/get_messages.py'),
        'tos')]],
                                       'top-node': [('generic attribute',
        loc('../VK/get_messages.py'),
        'a')]},
        loc('../VK/get_sent_messages.py'): {'expanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../VK/get_sent_messages.py'),
                             'tos')]],
        'top-node': [('generic attribute',
                      loc('../VK/get_sent_messages.py'),
                      'a')]},
        loc('../exmo/sim.py'): {'expanded-nodes': [],
                                'selected-nodes': [[('generic attribute',
        loc('../exmo/sim.py'),
        'x')]],
                                'top-node': [('generic attribute',
        loc('../exmo/sim.py'),
        'GH')]},
        loc('../ftog.py'): {'expanded-nodes': [],
                            'selected-nodes': [],
                            'top-node': None},
        loc('../mfcc compile/compare.py'): {'expanded-nodes': [[('function d'\
        'ef',
        loc('../mfcc compile/compare.py'),
        'extract')]],
        'selected-nodes': [[('generic attribute',
                             loc('../mfcc compile/compare.py'),
                             'extract.sheet'),
                            ('generic attribute',
                             loc('../mfcc compile/compare.py'),
                             'extract.sheet')]],
        'top-node': [('function def',
                      loc('../mfcc compile/compare.py'),
                      'correl')]},
        loc('../mfcc compile/eval_param.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../mfcc compile/eval_param.py'),
                      'DCTS')]},
        loc('../mfcc compile/funcs.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../mfcc compile/funcs.py'),
                      'band_window')]},
        loc('../mfcc compile/gradient.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../mfcc compile/gradient.py'),
                      'argvals')]},
        loc('../mfcc compile/mop.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../mfcc compile/mop.py'),
                      'data')]},
        loc('../mfcc compile/relaxer.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../mfcc compile/relaxer.py'),
                      'best_corr')]},
        loc('../../chf3.py'): {'expanded-nodes': [],
                               'selected-nodes': [[('generic attribute',
        loc('../../chf3.py'),
        't')]],
                               'top-node': [('generic attribute',
        loc('../../chf3.py'),
        'a')]},
        loc('../../chf3_old.py'): {'expanded-nodes': [],
                                   'selected-nodes': [],
                                   'top-node': [('generic attribute',
        loc('../../chf3_old.py'),
        'a')]},
        loc('../../chf3_old_new.py'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': [('generic attribute',
        loc('../../chf3_old_new.py'),
        'a')]},
        loc('../../chf4.py'): {'expanded-nodes': [],
                               'selected-nodes': [[('function def',
        loc('../../chf4.py'),
        'update')]],
                               'top-node': [('generic attribute',
        loc('../../chf4.py'),
        'a')]},
        loc('../../kek.py'): {'expanded-nodes': [],
                              'selected-nodes': [[('generic attribute',
        loc('../../kek.py'),
        'a')]],
                              'top-node': [('generic attribute',
        loc('../../kek.py'),
        'a')]},
        loc('../../untitled-1.py'): {'expanded-nodes': [],
                                     'selected-nodes': [[('function def',
        loc('../../untitled-1.py'),
        'sort5')]],
                                     'top-node': [('generic attribute',
        loc('../../untitled-1.py'),
        'i')]},
        loc('../../\xd0\xb2\xd1\x83.py'): {'expanded-nodes': [],
        'selected-nodes': [None],
        'top-node': None},
        loc('../../../Documents/\xd0\x9f\xd1\x80\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc\xd0\xbc\xd1\x8b/\xd0\x9b\xd0\x9a\xd0\xa8 2017 \xd0\xb2\xd1\x81\xd1\x82\xd1\x83\xd0\xbf\xd0\xb8\xd1\x82\xd0\xb5\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xb0\xd1\x8f/A.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../Documents/\xd0\x9f\xd1\x80\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc\xd0\xbc\xd1\x8b/\xd0\x9b\xd0\x9a\xd0\xa8 2017 \xd0\xb2\xd1\x81\xd1\x82\xd1\x83\xd0\xbf\xd0\xb8\xd1\x82\xd0\xb5\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xb0\xd1\x8f/A.py'),
                      'a')]},
        loc('../../../Documents/\xd0\x9f\xd1\x80\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc\xd0\xbc\xd1\x8b/\xd0\x9b\xd0\x9a\xd0\xa8 2017 \xd0\xb2\xd1\x81\xd1\x82\xd1\x83\xd0\xbf\xd0\xb8\xd1\x82\xd0\xb5\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xb0\xd1\x8f/B.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../../Documents/\xd0\x9f\xd1\x80\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc\xd0\xbc\xd1\x8b/\xd0\x9b\xd0\x9a\xd0\xa8 2017 \xd0\xb2\xd1\x81\xd1\x82\xd1\x83\xd0\xbf\xd0\xb8\xd1\x82\xd0\xb5\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xb0\xd1\x8f/B.py'),
                             'A')]],
        'top-node': [('generic attribute',
                      loc('../../../Documents/\xd0\x9f\xd1\x80\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc\xd0\xbc\xd1\x8b/\xd0\x9b\xd0\x9a\xd0\xa8 2017 \xd0\xb2\xd1\x81\xd1\x82\xd1\x83\xd0\xbf\xd0\xb8\xd1\x82\xd0\xb5\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xb0\xd1\x8f/B.py'),
                      'A')]},
        loc('../../../Documents/\xd0\x9f\xd1\x80\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc\xd0\xbc\xd1\x8b/\xd0\x9b\xd0\x9a\xd0\xa8 2017 \xd0\xb2\xd1\x81\xd1\x82\xd1\x83\xd0\xbf\xd0\xb8\xd1\x82\xd0\xb5\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xb0\xd1\x8f/D.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../Documents/\xd0\x9f\xd1\x80\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc\xd0\xbc\xd1\x8b/\xd0\x9b\xd0\x9a\xd0\xa8 2017 \xd0\xb2\xd1\x81\xd1\x82\xd1\x83\xd0\xbf\xd0\xb8\xd1\x82\xd0\xb5\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xb0\xd1\x8f/D.py'),
                      'a')]},
        loc('../../../Documents/\xd0\x9f\xd1\x80\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc\xd0\xbc\xd1\x8b/\xd0\x9b\xd0\x9a\xd0\xa8 2017 \xd0\xb2\xd1\x81\xd1\x82\xd1\x83\xd0\xbf\xd0\xb8\xd1\x82\xd0\xb5\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xb0\xd1\x8f/E.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../Documents/\xd0\x9f\xd1\x80\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc\xd0\xbc\xd1\x8b/\xd0\x9b\xd0\x9a\xd0\xa8 2017 \xd0\xb2\xd1\x81\xd1\x82\xd1\x83\xd0\xbf\xd0\xb8\xd1\x82\xd0\xb5\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xb0\xd1\x8f/E.py'),
                      'a')]},
        loc('../../../Documents/\xd0\x9f\xd1\x80\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc\xd0\xbc\xd1\x8b/\xd0\x9b\xd0\x9a\xd0\xa8 2017 \xd0\xb2\xd1\x81\xd1\x82\xd1\x83\xd0\xbf\xd0\xb8\xd1\x82\xd0\xb5\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xb0\xd1\x8f/drone.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../../Documents/\xd0\x9f\xd1\x80\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc\xd0\xbc\xd1\x8b/\xd0\x9b\xd0\x9a\xd0\xa8 2017 \xd0\xb2\xd1\x81\xd1\x82\xd1\x83\xd0\xbf\xd0\xb8\xd1\x82\xd0\xb5\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xb0\xd1\x8f/drone.py'),
                             'w')]],
        'top-node': [('generic attribute',
                      loc('../../../Documents/\xd0\x9f\xd1\x80\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc\xd0\xbc\xd1\x8b/\xd0\x9b\xd0\x9a\xd0\xa8 2017 \xd0\xb2\xd1\x81\xd1\x82\xd1\x83\xd0\xbf\xd0\xb8\xd1\x82\xd0\xb5\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xb0\xd1\x8f/drone.py'),
                      'd')]},
        loc('../../../Documents/\xd0\x9f\xd1\x80\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc\xd0\xbc\xd1\x8b/\xd0\x9b\xd0\x9a\xd0\xa8 2017 \xd0\xb2\xd1\x81\xd1\x82\xd1\x83\xd0\xbf\xd0\xb8\xd1\x82\xd0\xb5\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xb0\xd1\x8f/elevator.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../../Documents/\xd0\x9f\xd1\x80\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc\xd0\xbc\xd1\x8b/\xd0\x9b\xd0\x9a\xd0\xa8 2017 \xd0\xb2\xd1\x81\xd1\x82\xd1\x83\xd0\xbf\xd0\xb8\xd1\x82\xd0\xb5\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xb0\xd1\x8f/elevator.py'),
                             'way')]],
        'top-node': [('generic attribute',
                      loc('../../../Documents/\xd0\x9f\xd1\x80\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc\xd0\xbc\xd1\x8b/\xd0\x9b\xd0\x9a\xd0\xa8 2017 \xd0\xb2\xd1\x81\xd1\x82\xd1\x83\xd0\xbf\xd0\xb8\xd1\x82\xd0\xb5\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xb0\xd1\x8f/elevator.py'),
                      'ans')]},
        loc('../../../Documents/\xd0\x9f\xd1\x80\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc\xd0\xbc\xd1\x8b/\xd0\x9b\xd0\x9a\xd0\xa8 2017 \xd0\xb2\xd1\x81\xd1\x82\xd1\x83\xd0\xbf\xd0\xb8\xd1\x82\xd0\xb5\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xb0\xd1\x8f/hats.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../../../Documents/\xd0\x9f\xd1\x80\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc\xd0\xbc\xd1\x8b/\xd0\x9b\xd0\x9a\xd0\xa8 2017 \xd0\xb2\xd1\x81\xd1\x82\xd1\x83\xd0\xbf\xd0\xb8\xd1\x82\xd0\xb5\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xb0\xd1\x8f/hats.py'),
                             'add')]],
        'top-node': [('function def',
                      loc('../../../Documents/\xd0\x9f\xd1\x80\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc\xd0\xbc\xd1\x8b/\xd0\x9b\xd0\x9a\xd0\xa8 2017 \xd0\xb2\xd1\x81\xd1\x82\xd1\x83\xd0\xbf\xd0\xb8\xd1\x82\xd0\xb5\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xb0\xd1\x8f/hats.py'),
                      'add')]},
        loc('../../../Documents/\xd0\x9f\xd1\x80\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc\xd0\xbc\xd1\x8b/\xd0\x9b\xd0\x9a\xd0\xa8 2017 \xd0\xb2\xd1\x81\xd1\x82\xd1\x83\xd0\xbf\xd0\xb8\xd1\x82\xd0\xb5\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xb0\xd1\x8f/kek.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../Documents/\xd0\x9f\xd1\x80\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc\xd0\xbc\xd1\x8b/\xd0\x9b\xd0\x9a\xd0\xa8 2017 \xd0\xb2\xd1\x81\xd1\x82\xd1\x83\xd0\xbf\xd0\xb8\xd1\x82\xd0\xb5\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xb0\xd1\x8f/kek.py'),
                      'a')]},
        loc('../../../Documents/\xd0\x9f\xd1\x80\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc\xd0\xbc\xd1\x8b/\xd0\x9b\xd0\x9a\xd0\xa8 2017 \xd0\xb2\xd1\x81\xd1\x82\xd1\x83\xd0\xbf\xd0\xb8\xd1\x82\xd0\xb5\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xb0\xd1\x8f/lol.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../Documents/\xd0\x9f\xd1\x80\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc\xd0\xbc\xd1\x8b/\xd0\x9b\xd0\x9a\xd0\xa8 2017 \xd0\xb2\xd1\x81\xd1\x82\xd1\x83\xd0\xbf\xd0\xb8\xd1\x82\xd0\xb5\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xb0\xd1\x8f/lol.py'),
                      'alph')]},
        loc('../../../Documents/\xd0\x9f\xd1\x80\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc\xd0\xbc\xd1\x8b/\xd0\x9b\xd0\x9a\xd0\xa8 2017 \xd0\xb2\xd1\x81\xd1\x82\xd1\x83\xd0\xbf\xd0\xb8\xd1\x82\xd0\xb5\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xb0\xd1\x8f/rna_gen.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../../Documents/\xd0\x9f\xd1\x80\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc\xd0\xbc\xd1\x8b/\xd0\x9b\xd0\x9a\xd0\xa8 2017 \xd0\xb2\xd1\x81\xd1\x82\xd1\x83\xd0\xbf\xd0\xb8\xd1\x82\xd0\xb5\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xb0\xd1\x8f/rna_gen.py'),
                             'n')]],
        'top-node': [('generic attribute',
                      loc('../../../Documents/\xd0\x9f\xd1\x80\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc\xd0\xbc\xd1\x8b/\xd0\x9b\xd0\x9a\xd0\xa8 2017 \xd0\xb2\xd1\x81\xd1\x82\xd1\x83\xd0\xbf\xd0\xb8\xd1\x82\xd0\xb5\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xb0\xd1\x8f/rna_gen.py'),
                      'ans1')]},
        loc('../../../Documents/\xd0\x9f\xd1\x80\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc\xd0\xbc\xd1\x8b/\xd0\x9b\xd0\x9a\xd0\xa8 2017 \xd0\xb2\xd1\x81\xd1\x82\xd1\x83\xd0\xbf\xd0\xb8\xd1\x82\xd0\xb5\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xb0\xd1\x8f/warmup_tet.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [None],
        'top-node': None},
        loc('../../../Documents/\xd0\x9f\xd1\x80\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc\xd0\xbc\xd1\x8b/\xd0\xa1\xd0\xa3\xd0\x9d\xd0\xa6 \xd0\x9c\xd0\x93\xd0\xa3/2017.03.19/E.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../Documents/\xd0\x9f\xd1\x80\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc\xd0\xbc\xd1\x8b/\xd0\xa1\xd0\xa3\xd0\x9d\xd0\xa6 \xd0\x9c\xd0\x93\xd0\xa3/2017.03.23/Lower_bound.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../../Documents/\xd0\x9f\xd1\x80\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc\xd0\xbc\xd1\x8b/\xd0\xa1\xd0\xa3\xd0\x9d\xd0\xa6 \xd0\x9c\xd0\x93\xd0\xa3/2017.03.23/Lower_bound.py'),
                             'm')]],
        'top-node': [('generic attribute',
                      loc('../../../Documents/\xd0\x9f\xd1\x80\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc\xd0\xbc\xd1\x8b/\xd0\xa1\xd0\xa3\xd0\x9d\xd0\xa6 \xd0\x9c\xd0\x93\xd0\xa3/2017.03.23/Lower_bound.py'),
                      'a')]},
        loc('../../../Documents/\xd0\x9f\xd1\x80\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc\xd0\xbc\xd1\x8b/\xd0\xa1\xd0\xa3\xd0\x9d\xd0\xa6 \xd0\x9c\xd0\x93\xd0\xa3/2017.03.23/Upper_bound.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../Documents/\xd0\x9f\xd1\x80\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc\xd0\xbc\xd1\x8b/\xd0\xa1\xd0\xa3\xd0\x9d\xd0\xa6 \xd0\x9c\xd0\x93\xd0\xa3/2017.03.23/Upper_bound.py'),
                      'a')]},
        loc('../../../Documents/\xd0\x9f\xd1\x80\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc\xd0\xbc\xd1\x8b/\xd0\xa1\xd0\xa3\xd0\x9d\xd0\xa6 \xd0\x9c\xd0\x93\xd0\xa3/2017.03.23/std_lower_bound.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../Documents/\xd0\x9f\xd1\x80\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc\xd0\xbc\xd1\x8b/\xd0\xa1\xd0\xa3\xd0\x9d\xd0\xa6 \xd0\x9c\xd0\x93\xd0\xa3/2017.03.23/std_lower_bound.py'),
                      'a')]},
        loc('../../../Documents/\xd0\x9f\xd1\x80\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc\xd0\xbc\xd1\x8b/\xd0\xa1\xd0\xa3\xd0\x9d\xd0\xa6 \xd0\x9c\xd0\x93\xd0\xa3/2017.03.23/std_upper_bound.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../Documents/\xd0\x9f\xd1\x80\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc\xd0\xbc\xd1\x8b/\xd0\xa1\xd0\xa3\xd0\x9d\xd0\xa6 \xd0\x9c\xd0\x93\xd0\xa3/2017.03.23/std_upper_bound.py'),
                      'a')]},
        loc('../../../Documents/\xd0\x9f\xd1\x80\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc\xd0\xbc\xd1\x8b/\xd0\xa1\xd0\xa3\xd0\x9d\xd0\xa6 \xd0\x9c\xd0\x93\xd0\xa3/2017.03.23/try.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../../Documents/\xd0\x9f\xd1\x80\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc\xd0\xbc\xd1\x8b/\xd0\xa1\xd0\xa3\xd0\x9d\xd0\xa6 \xd0\x9c\xd0\x93\xd0\xa3/2017.03.23/try.py'),
                             'a')]],
        'top-node': [('generic attribute',
                      loc('../../../Documents/\xd0\x9f\xd1\x80\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc\xd0\xbc\xd1\x8b/\xd0\xa1\xd0\xa3\xd0\x9d\xd0\xa6 \xd0\x9c\xd0\x93\xd0\xa3/2017.03.23/try.py'),
                      'a')]},
        loc('../../../Documents/\xd0\x9f\xd1\x80\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc\xd0\xbc\xd1\x8b/\xd0\xa1\xd0\xa3\xd0\x9d\xd0\xa6 \xd0\x9c\xd0\x93\xd0\xa3/2017.03.23/try2.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../Documents/\xd0\x9f\xd1\x80\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc\xd0\xbc\xd1\x8b/\xd0\xa1\xd0\xa3\xd0\x9d\xd0\xa6 \xd0\x9c\xd0\x93\xd0\xa3/2017.03.23/try2.py'),
                      'n')]},
        loc('../../../Documents/\xd0\x9f\xd1\x80\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc\xd0\xbc\xd1\x8b/\xd0\xa1\xd0\xa3\xd0\x9d\xd0\xa6 \xd0\x9c\xd0\x93\xd0\xa3/2017.03.23/zagon.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../Documents/\xd0\x9f\xd1\x80\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc\xd0\xbc\xd1\x8b/\xd0\xa1\xd0\xa3\xd0\x9d\xd0\xa6 \xd0\x9c\xd0\x93\xd0\xa3/2017.03.23/zagon.py'),
                      'i')]},
        loc('../../../Downloads/MFCC/Build/compare.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../Downloads/MFCC/Build/compare.py'),
                      'correl')]},
        loc('../../../Downloads/MFCC/Build/eval_param.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../Downloads/MFCC/Build/eval_param.py'),
                      'base')]},
        loc('../../../Downloads/MFCC/Build/excel_results.py'): {'expanded-no'\
        'des': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../Downloads/MFCC/Build/excel_results.py'),
                      'ex')]},
        loc('../../../Downloads/MFCC/Build/funcs.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../Downloads/MFCC/Build/funcs.py'),
                      'band_window')]},
        loc('../../../Downloads/MFCC/Build/relaxer.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../Downloads/MFCC/Build/relaxer.py'),
                      'best')]},
        loc('../../../Downloads/MFCC/Build/table_maker.py'): {'expanded-node'\
        's': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../../Downloads/MFCC/Build/table_maker.py'),
                             'w')]],
        'top-node': [('generic attribute',
                      loc('../../../Downloads/MFCC/Build/table_maker.py'),
                      'f')]},
        loc('file:D:/Anaconda3/Lib/site-packages/scipy/io/wavfile.py'): {'ex'\
        'panded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:D:/Anaconda3/Lib/site-packages/scipy/io/wavfile.py'),
                      'KNOWN_WAVE_FORMATS')]},
        loc('file:D:/Anaconda3/Lib/wave.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:D:/Anaconda3/Lib/wave.py'),
                      'Error')]},
        loc('file:D:/Program Files/Wing IDE 6.0/resources/builtin-pi-files/3.3/builtins.pi'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:D:/Program Files/Wing IDE 6.0/resources/builtin-pi-files/3.3/builtins.pi'),
                      'abs')]},
        loc('file:D:/Python34/Lib/multiprocessing/pool.py'): {'expanded-node'\
        's': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:D:/Python34/Lib/multiprocessing/pool.py'),
                      'ApplyResult')]},
        loc('file:D:/Python34/Lib/site-packages/xlwt/Row.py'): {'expanded-no'\
        'des': [],
        'selected-nodes': [[('class def',
                             loc('file:D:/Python34/Lib/site-packages/xlwt/Row.py'),
                             'Row')]],
        'top-node': [('class def',
                      loc('file:D:/Python34/Lib/site-packages/xlwt/Row.py'),
                      'Decimal')]},
        loc('file:D:/Python36/Lib/_sitebuiltins.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:D:/Python36/Lib/_sitebuiltins.py'),
                      'Quitter')]},
        loc('file:D:/Python36/Lib/site-packages/OpenGL/GLUT/special.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:D:/Python36/Lib/site-packages/OpenGL/GLUT/special.py'),
                      'FUNCTION_TYPE')]},
        loc('file:D:/Python36/Lib/site-packages/pyglet/gl/lib.py'): {'expand'\
        'ed-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:D:/Python36/Lib/site-packages/pyglet/gl/lib.py'),
                      'c_ptrdiff_t')]},
        loc('file:D:/Python36/lib/site-packages/OpenGL/platform/baseplatform.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('file:D:/Python36/lib/site-packages/OpenGL/platform/baseplatform.py'),
                             '_NullFunctionPointer')]],
        'top-node': [('class def',
                      loc('file:D:/Python36/lib/site-packages/OpenGL/platform/baseplatform.py'),
                      'BasePlatform')]},
        loc('unknown:<untitled> #2'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': None},
        loc('unknown:<untitled> #3'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': None},
        loc('unknown:<untitled> #5'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': [('generic attribute',
        loc('unknown:<untitled> #4'),
        'dyn')]},
        loc('unknown:<untitled> #6'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': None},
        loc('unknown:<untitled> #7'): {'expanded-nodes': [],
                                       'selected-nodes': [None],
                                       'top-node': None},
        loc('unknown:<untitled> #8'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': None},
        loc('unknown:<untitled> #1'): {'expanded-nodes': [],
                                       'selected-nodes': [None],
                                       'top-node': None},
        u'By Module': {'expanded-nodes': [],
                       'selected-nodes': [],
                       'top-node': None},
        loc('x-wingide-zip://D:/Python36/lib/site-packages/PodSixNet-79-py3.6.egg//PodSixNet/Connection.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('x-wingide-zip://D:/Python36/lib/site-packages/PodSixNet-79-py3.6.egg//PodSixNet/Connection.py'),
                      'c')]}},
                                'browse_mode': u'Current Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {u'Derived Classes': False,
        u'Imported': False,
        u'Modules': True}}),
                              ('snippets',
                               'tall',
                               0,
                               {'tree-states': {'__all__': [],
        u'c': [],
        u'django': [],
        u'html': [],
        u'py': []}}),
                              ('refactoring',
                               'tall',
                               0,
                               {}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [3,
                          0],
        'notebook_display': 'normal',
        'notebook_percent': 0.36413043478260865,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': u'',
                                       'fReverse': False,
                                       'fSearchText': u'',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': True,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 44,
                                       'fReplaceText': u'actions[j]',
                                       'fReverse': False,
                                       'fSearchText': u'action',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': True}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-breakpoints',
                      'wide',
                      0,
                      {}),
                     ('testing',
                      'wide',
                      0,
                      {'added-files': [],
                       'filter': u'',
                       'recent-filters': None,
                       'sort-order': 'alpha',
                       'tree-state': {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': (0,)}}),
                     ('uses',
                      'wide',
                      0,
                      {}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('debug-probe',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'first-line': 11L,
                       'folded-linenos': [],
                       'history': {u'file:C:/Users/Svyat.000/Desktop/Python/Gnomes/main.py': ['n'\
        'ame\n',
        'self.field[px][py].name\n',
        'self.field[px][py].things_left[name]\n',
        'self.storage\n',
        'spritepath\n',
        "open(spritepath, 'rb')\n",
        'import os\n',
        'os.path.curdir\n',
        'os.path.abspath(os.path.curdir)\n',
        'os.path.join(os.path.abspath(os.path.curdir), spritepath)\n',
        'os.path.join(os.path.abspath(os.path.curdir))\n',
        'os.path.abspath(os.path.curdir) + spritepath\n',
        'os.path.exists(_)\n',
        '_\n',
        'x = os.path.abspath(os.path.curdir) + spritepath\n',
        "open(x, 'r')\n",
        '_.close()\n',
        "open(spritepath, 'r')\n",
        'self.actions\n',
        'numer\n',
        'number\n',
        'self.gm.actions\n',
        'self.gm.actions[0]\n',
        'self.gm.actions[0].spritename\n',
        'self.actions[0].spritename\n',
        'self.actions[1].spritename\n',
        'action\n',
        'j\n',
        'actions\n',
        'number - 1\n',
        'i\n',
        'ing\n',
        'res\n',
        'ing, res\n',
        'self.properties\n',
        'self.name\n',
        "action['actions']\n",
        'self.gm.player.coords\n',
        '[i, j]\n',
        "a = ('loot')\n",
        'a\n']},
                       'launch-id': None,
                       'sel-line': 25L,
                       'sel-line-start': 613L,
                       'selection_end': 613L,
                       'selection_start': 613L}),
                     ('debug-watch',
                      'wide',
                      1,
                      {}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'first-line': 3L,
                       'folded-linenos': [],
                       'history': {None: ['from random import randint\n',
        'b = bytes([randint(256) for i in range(4 * 100)])\n',
        'b = bytes([randint(, 256) for i in range(4 * 100)])\n',
        'randint(0, 1)\n',
        'b = bytes([randint(0, 256) for i in range(4 * 100)])\n',
        'b = bytes([randint(0, 255) for i in range(4 * 100)])\n',
        "s = b.encode('utf-8')\n",
        "s = b.decode('utf-8')\n",
        '0xdc\n',
        "s = b.decode('ascii')\n",
        "s = b.decode('ansi')\n",
        's\n',
        'print(s)\n',
        "x = Recipe(['rocks'], [3], ['chipper'], [1])\n",
        'z\n',
        'a, b = ()\n',
        'a, b = _\n',
        'i = Inventory()\n',
        "i.load_recipes('resources/recipes.txt')\n",
        'i.available_recipes\n',
        'a = [1, 2, 3]\n',
        'b = [4, 5, 6]\n',
        'for i, j in zip(a, b):\n    print(i, j)\n\n',
        'b\n',
        'zip(a, b)\n',
        'list(zip(a, b))\n',
        'for i, j in a, b:\n    print(i, j)\n\n',
        'list(range(12))\n',
        'i.storage\n',
        'i.available_recipes[0]\n',
        'def x(a, b, c):\n    return a * b + c\n\n',
        'y = lambda a, b, c: a * b + c\n',
        'x(1, 2, 3)\n',
        'y(1, 2, 3)\n',
        'x = None\n',
        'x = lambda: 0\n',
        'x()\n',
        'import json\n',
        'a = [0, 1, 2, 3]\n',
        'a[0]\n',
        'a[1]\n',
        'a = dict()\n',
        "a = {'man': 'Tima', 'age': 13, 'gender': 'm'}\n",
        "a['man']\n",
        "s = \"{'man': 'Tima', 'age': 13, 'gender': 'm'}\"\n",
        'dict(s)\n',
        "x['grass'] = dict()\n",
        "x['grass']['things_left'] = dict()\n",
        "x['grass']['things_left']['rocks'] = 3\n",
        "x['grass']['things_left']['sticks'] = 3\n",
        "x['grass']\n",
        'for a, b in {1: 2}:\n    print(a, b)\n\n',
        'for a in {1: 2}:\n    print(a)\n\n',
        'for a, b in {1: 2}.tems():\n    print(a, b)\n\n',
        'for a, b in {1: 2}.items():\n    print(a, b)\n\n',
        'help(json)\n',
        'x = [1, 2, 3]\n',
        'x = {1: 2, 3: 4}\n',
        'def kek(y):\n    y[1] += 100\n\n',
        'kek(x)\n',
        'x = dict()\n',
        'class x:\n    def __init__(self):\n        self.last = lambda: self'\
        ' = y()\n\n',
        'class x:\n    def __init__(self):\n        def kek():\n            '\
        'self = y()\n        self.last = kek\n\n',
        "class y:\n    def __init__(self):\n        self.a = 12\n        pri"\
        "nt('Y', flush=True)\n\n",
        'a\n',
        "class y:\n    def __init__(self):\n        self.a = 12\n        pri"\
        "nt('Y', flush=True)\n    def __delete__(self):\n        print('dele"\
        "te!', flush=True)\n\n",
        "class y:\n    def __init__(self):\n        self.a = 12\n        pri"\
        "nt('Y', flush=True)\n    def __del__(self):\n        print('delete!"\
        "', flush=True)\n\n",
        'delete a\n',
        'a = y()\n',
        'del a\n',
        'a = x()\n',
        'a.last\n',
        'class x:\n    def __init__(self, a):\n        def kek():\n         '\
        '   self = y()\n        self.last = kek\n        self.a = a\n\n',
        'class x:\n    def __init__(self, a):\n        def kek():\n         '\
        '   self = x(1)\n        self.last = kek\n        self.a = a\n\n',
        'class x:\n    def __init__(self, a):\n        def kek():\n         '\
        '   self.__init__(0)\n        self.last = kek\n        self.a = a\n'\
        '\n',
        'a = x(10)\n',
        'a.last()\n',
        'a.a\n',
        'copyright\n',
        'x = [[1, 2], [3, 4]]\n',
        'x[0][0] = 10\n',
        'x = [(1, 2), (3, 4)]\n',
        'y = x.copy()\n',
        'x[0] = (10, 10)\n',
        'y\n',
        'x\n',
        "x = [('name', 1), ('asd', 2), ('kek', 100)]\n",
        'zip(x)\n',
        'list(_)\n',
        'list(*zip(x))\n',
        'list(zip(*x))\n',
        'y = zip(*x)\n',
        'y = zip(*x)[0]\n',
        'y = list(zip(*x))[0]\n',
        "'name' in y\n",
        "[('loot')]\n",
        "[('loot',)]\n",
        "[('loot',)][0]\n",
        "[('loot',)][0][0]\n",
        "[('loot',)][0][1]\n"]},
                       'launch-id': None,
                       'sel-line': 18L,
                       'sel-line-start': 823L,
                       'selection_end': 823L,
                       'selection_start': 823L}),
                     ('bookmarks',
                      'wide',
                      1,
                      {}),
                     ('messages',
                      'wide',
                      2,
                      {}),
                     ('os-command',
                      'wide',
                      1,
                      {'last-percent': 0.8,
                       'toolbox-percent': 1.0,
                       'toolbox-tree-sel': ''})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('jsonbuilder.py'),
        {'attrib-starts': [('action',
                            0)],
         'first-line': 0L,
         'folded-linenos': [],
         'sel-line': 1L,
         'sel-line-start': 68L,
         'selection_end': 68L,
         'selection_start': 68L},
        1534412972.867],
        [loc('game.py'),
         {'attrib-starts': [('Cell',
                             5),
                            ('Cell.create_death_voice',
                             14),
                            ('Cell.create_death_voice.death_voice',
                             17)],
          'first-line': 5L,
          'folded-linenos': [93L],
          'sel-line': 20L,
          'sel-line-start': 660L,
          'selection_end': 709L,
          'selection_start': 709L},
         1534412974.066],
        [loc('jsonbuilder.py'),
         {'attrib-starts': [('action',
                             0)],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 1L,
          'sel-line-start': 68L,
          'selection_end': 68L,
          'selection_start': 68L},
         1534412978.468],
        [loc('game.py'),
         {'attrib-starts': [('Cell',
                             5),
                            ('Cell.create_death_voice',
                             14),
                            ('Cell.create_death_voice.death_voice',
                             17)],
          'first-line': 5L,
          'folded-linenos': [93L],
          'sel-line': 20L,
          'sel-line-start': 660L,
          'selection_end': 797L,
          'selection_start': 797L},
         1534413010.975],
        [loc('jsonbuilder.py'),
         {'attrib-starts': [('action',
                             0)],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 1L,
          'sel-line-start': 68L,
          'selection_end': 68L,
          'selection_start': 68L},
         1534413012.307],
        [loc('managers.py'),
         {'attrib-starts': [('DisplayManager',
                             6),
                            ('DisplayManager.getimage',
                             27)],
          'first-line': 46L,
          'folded-linenos': [103L,
                             119L],
          'sel-line': 54L,
          'sel-line-start': 2515L,
          'selection_end': 2546L,
          'selection_start': 2546L},
         1534413018.524],
        [loc('game.py'),
         {'attrib-starts': [('Cell',
                             5),
                            ('Cell.create_death_voice',
                             14),
                            ('Cell.create_death_voice.death_voice',
                             17)],
          'first-line': 5L,
          'folded-linenos': [93L],
          'sel-line': 20L,
          'sel-line-start': 660L,
          'selection_end': 797L,
          'selection_start': 797L},
         1534413020.224],
        [loc('jsonbuilder.py'),
         {'attrib-starts': [('action',
                             0)],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 1L,
          'sel-line-start': 68L,
          'selection_end': 68L,
          'selection_start': 68L},
         1534413021.113],
        [loc('game.py'),
         {'attrib-starts': [('Inventory',
                             34),
                            ('Inventory.__init__',
                             35)],
          'first-line': 23L,
          'folded-linenos': [93L],
          'sel-line': 41L,
          'sel-line-start': 1433L,
          'selection_end': 1460L,
          'selection_start': 1460L},
         1534413027.704],
        [loc('managers.py'),
         {'attrib-starts': [('GameManager',
                             94),
                            ('GameManager.perform_action',
                             169)],
          'first-line': 174L,
          'folded-linenos': [103L,
                             119L],
          'sel-line': 195L,
          'sel-line-start': 9364L,
          'selection_end': 9440L,
          'selection_start': 9440L},
         1534413124.861],
        [loc('game.py'),
         {'attrib-starts': [('Inventory',
                             34),
                            ('Inventory.__init__',
                             35)],
          'first-line': 23L,
          'folded-linenos': [92L],
          'sel-line': 40L,
          'sel-line-start': 1402L,
          'selection_end': 1436L,
          'selection_start': 1436L},
         1534413143.174],
        [loc('managers.py'),
         {'attrib-starts': [('GameManager',
                             94),
                            ('GameManager.perform_action',
                             169)],
          'first-line': 165L,
          'folded-linenos': [103L,
                             119L],
          'sel-line': 196L,
          'sel-line-start': 9457L,
          'selection_end': 9501L,
          'selection_start': 9501L},
         1534413169.235],
        [loc('game.py'),
         {'attrib-starts': [('Inventory',
                             34),
                            ('Inventory.__init__',
                             35)],
          'first-line': 15L,
          'folded-linenos': [92L],
          'sel-line': 40L,
          'sel-line-start': 1402L,
          'selection_end': 1436L,
          'selection_start': 1436L},
         1534413174.529],
        [loc('managers.py'),
         {'attrib-starts': [('GameManager',
                             94),
                            ('GameManager.perform_action',
                             169)],
          'first-line': 93L,
          'folded-linenos': [103L,
                             119L],
          'sel-line': 196L,
          'sel-line-start': 9457L,
          'selection_end': 9501L,
          'selection_start': 9501L},
         1534413180.474],
        [loc('main.py'),
         {'attrib-starts': [],
          'first-line': 3L,
          'folded-linenos': [],
          'sel-line': 13L,
          'sel-line-start': 315L,
          'selection_end': 339L,
          'selection_start': 339L},
         1534413342.298],
        [loc('jsonbuilder.py'),
         {'attrib-starts': [],
          'first-line': 13L,
          'folded-linenos': [],
          'sel-line': 45L,
          'sel-line-start': 2774L,
          'selection_end': 2909L,
          'selection_start': 2909L},
         1534414084.633],
        [loc('main.py'),
         {'attrib-starts': [('event',
                             32)],
          'first-line': 27L,
          'folded-linenos': [],
          'sel-line': 42L,
          'sel-line-start': 1233L,
          'selection_end': 1252L,
          'selection_start': 1252L},
         1534414133.601],
        [loc('managers.py'),
         {'attrib-starts': [('GameManager',
                             94),
                            ('GameManager.perform_action',
                             169)],
          'first-line': 93L,
          'folded-linenos': [103L,
                             119L],
          'sel-line': 196L,
          'sel-line-start': 9457L,
          'selection_end': 9501L,
          'selection_start': 9501L},
         1534414135.833],
        [loc('managers.py'),
         {'attrib-starts': [('EventManager',
                             216),
                            ('EventManager.show_action',
                             285)],
          'first-line': 265L,
          'folded-linenos': [103L,
                             119L],
          'sel-line': 286L,
          'sel-line-start': 12470L,
          'selection_end': 12499L,
          'selection_start': 12499L},
         1534414270.468],
        [loc('main.py'),
         {'attrib-starts': [('event',
                             32)],
          'first-line': 27L,
          'folded-linenos': [],
          'sel-line': 42L,
          'sel-line-start': 1233L,
          'selection_end': 1252L,
          'selection_start': 1252L},
         1534414276.492]],
        20),
        'current-loc': loc('main.py'),
        'editor-state-list': [(loc('main.py'),
                               {'attrib-starts': [('event',
        32)],
                                'first-line': 27L,
                                'folded-linenos': [],
                                'sel-line': 42L,
                                'sel-line-start': 1233L,
                                'selection_end': 1252L,
                                'selection_start': 1252L}),
                              (loc('managers.py'),
                               {'attrib-starts': [('EventManager',
        216),
        ('EventManager.show_action',
         285)],
                                'first-line': 265L,
                                'folded-linenos': [103L,
        119L],
                                'sel-line': 286L,
                                'sel-line-start': 12470L,
                                'selection_end': 12499L,
                                'selection_start': 12499L}),
                              (loc('game.py'),
                               {'attrib-starts': [('Inventory',
        34),
        ('Inventory.__init__',
         35)],
                                'first-line': 15L,
                                'folded-linenos': [92L],
                                'sel-line': 40L,
                                'sel-line-start': 1402L,
                                'selection_end': 1436L,
                                'selection_start': 1436L}),
                              (loc('jsonbuilder.py'),
                               {'attrib-starts': [],
                                'first-line': 13L,
                                'folded-linenos': [],
                                'sel-line': 45L,
                                'sel-line-start': 2774L,
                                'selection_end': 2909L,
                                'selection_start': 2909L}),
                              (loc('file:D:/Python36/Lib/_sitebuiltins.py'),
                               {'attrib-starts': [('Quitter',
        12),
        ('Quitter.__call__',
         18)],
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 25L,
                                'sel-line-start': 765L,
                                'selection_end': 765L,
                                'selection_start': 765L})],
        'has-focus': False,
        'locked': False},
        [loc('main.py'),
         loc('managers.py'),
         loc('game.py'),
         loc('jsonbuilder.py'),
         loc('file:D:/Python36/Lib/_sitebuiltins.py')]),
                               'open_files': [u'game.py',
        u'jsonbuilder.py',
        u'managers.py',
        u'main.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.3385416666666667},
        'splits': 2,
        'tab_location': 'top',
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {0: 0.5},
                 'splits': 2,
                 'tab_location': 'left',
                 'user_data': {}},
        'window-alloc': (516,
                         411,
                         958,
                         488)}]}
guimgr.recent-documents = [loc('file:D:/Python36/Lib/_sitebuiltins.py'),
                           loc('main.py'),
                           loc('managers.py'),
                           loc('jsonbuilder.py'),
                           loc('game.py')]
guimgr.visual-state = {loc('../../Gnomes/game.py'): {'attrib-starts': [('Cel'\
        'l',
        0)],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L},
                       loc('../../Gnomes/main.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L},
                       loc('../../Gnomes/managers.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L},
                       loc('../3Dfun/Vector.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L},
                       loc('../3Dfun/Vector_v2.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L},
                       loc('../3Dfun/camera_move.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 5L,
        'sel-line-start': 86L,
        'selection_end': 101L,
        'selection_start': 101L},
                       loc('../3Dfun/point vs tuple.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L},
                       loc('../3Dfun/simple_screen.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L},
                       loc('game.py'): {'attrib-starts': [('Player',
        8),
        ('Player.__init__',
         9)],
        'first-line': 3L,
        'folded-linenos': [],
        'sel-line': 12L,
        'sel-line-start': 321L,
        'selection_end': 347L,
        'selection_start': 347L},
                       loc('main.py'): {'attrib-starts': [('display',
        16)],
        'first-line': 6L,
        'folded-linenos': [],
        'sel-line': 22L,
        'sel-line-start': 580L,
        'selection_end': 607L,
        'selection_start': 607L},
                       loc('mainQt.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 18L,
        'sel-line-start': 443L,
        'selection_end': 457L,
        'selection_start': 457L},
                       loc('managers.py'): {'attrib-starts': [('DisplayManag'\
        'er',
        6),
        ('DisplayManager.getimage',
         12)],
        'first-line': 35L,
        'folded-linenos': [],
        'sel-line': 35L,
        'sel-line-start': 1376L,
        'selection_end': 1383L,
        'selection_start': 1383L},
                       loc('resources/cells/jsonbuilder.py'): {'attrib-start'\
        's': [],
        'first-line': 30L,
        'folded-linenos': [],
        'sel-line': 40L,
        'sel-line-start': 1699L,
        'selection_end': 1710L,
        'selection_start': 1710L},
                       loc('file:D:/Python34/Lib/tkinter/__init__.py'): {'at'\
        'trib-starts': [('Canvas',
                         2235),
                        ('Canvas._create',
                         2312)],
        'first-line': 2295L,
        'folded-linenos': [],
        'sel-line': 2322L,
        'sel-line-start': 97894L,
        'selection_end': 97894L,
        'selection_start': 97894L},
                       loc('file:D:/Python36/Lib/pprint.py'): {'attrib-start'\
        's': [('_safe_repr',
               489)],
        'first-line': 525L,
        'folded-linenos': [],
        'sel-line': 554L,
        'sel-line-start': 20223L,
        'selection_end': 20223L,
        'selection_start': 20223L},
                       loc('file:D:/Python36/Lib/site-packages/PIL/Image.py'): {'a'\
        'ttrib-starts': [('Image',
                          505),
                         ('Image.paste',
                          1328)],
        'first-line': 1394L,
        'folded-linenos': [],
        'sel-line': 1405L,
        'sel-line-start': 44367L,
        'selection_end': 44367L,
        'selection_start': 44367L},
                       loc('file:D:/Python36/Lib/site-packages/PIL/ImageDraw.py'): {'a'\
        'ttrib-starts': [('ImageDraw',
                          45),
                         ('ImageDraw.text',
                          207)],
        'first-line': 195L,
        'folded-linenos': [],
        'sel-line': 223L,
        'sel-line-start': 7709L,
        'selection_end': 7709L,
        'selection_start': 7709L},
                       loc('file:D:/Python36/Lib/site-packages/PIL/ImageFont.py'): {'a'\
        'ttrib-starts': [('FreeTypeFont',
                          121),
                         ('FreeTypeFont.__init__',
                          124)],
        'first-line': 127L,
        'folded-linenos': [],
        'sel-line': 145L,
        'sel-line-start': 4259L,
        'selection_end': 4259L,
        'selection_start': 4259L}}
proj.build-cmd = {None: ('default',
                         None)}
proj.env-vars = {None: ('default',
                        [u''])}
proj.pyexec = {None: ('custom',
                      u'D:\\Python36\\python.exe')}
proj.pypath = {None: ('custom',
                      [u'D:\\Python36\\'])}
proj.vcs-system-config = ('prefs',
                          {'bzr': {'versioncontrol.bzr.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.bzr.executable': u'bzr'},
                           'cvs': {'versioncontrol.cvs.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.cvs.executable': u'cvs',
                                   'versioncontrol.cvs.extra-global-args': '-'\
        'z3'},
                           'git': {'versioncontrol.git.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.git.executable': u'git',
                                   'versioncontrol.git.use-porcelain': True},
                           'hg': {'versioncontrol.hg.active': 'active-if-pro'\
        'ject-dir',
                                  'versioncontrol.hg.dont-find-unregistered': True,
                                  'versioncontrol.hg.executable': u'hg',
                                  'versioncontrol.hg.extra-global-args': '--'\
        'encoding=utf8'},
                           'perforce': {'versioncontrol.perforce.active': 'n'\
        'ot-active',
        'versioncontrol.perforce.dont-find-unregistered': True,
        'versioncontrol.perforce.executable': u'p4',
        'versioncontrol.perforce.extra-global-args': ''},
                           'svn': {'versioncontrol.svn.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.svn.executable': u'svn',
                                   'versioncontrol.svn.extra-global-args': '',
                                   'versioncontrol.svn.svnadmin-executable': u'svnadmin'}})
search.replace-history = [u'actions[j]',
                          u'self.size']
search.search-history = [u'action',
                         u'-=',
                         u'.rec',
                         u"    #def __repr__(self):\r\n        #s = ''\r\n        #for m, a in zip(materials, amount):",
                         u'left',
                         u'self.gm.player.coords',
                         u'Cell']
testing.stored-results = (1,
                          [],
                          {})
